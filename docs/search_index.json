[["thursday-february-23-2023.html", "Thursday February 23, 2023 Fitting and interpreting spatial regression models", " Thursday February 23, 2023 “We build our computer systems the way we build or cities; over time, without plan, on top of ruins.” – Ellen Ullman Fitting and interpreting spatial regression models Always start with an OLS regression model. Returning to the crime data at the tract level in the city of Columbus, Ohio CC.sf &lt;- sf::st_read(dsn = here::here(&quot;data&quot;, &quot;columbus&quot;), layer = &quot;columbus&quot;) ## Reading layer `columbus&#39; from data source ## `/Users/jameselsner/Desktop/ClassNotes/ASS-2023/data/columbus&#39; ## using driver `ESRI Shapefile&#39; ## Simple feature collection with 49 features and 20 fields ## Geometry type: POLYGON ## Dimension: XY ## Bounding box: xmin: 5.874907 ymin: 10.78863 xmax: 11.28742 ymax: 14.74245 ## CRS: NA CRIME is the response variable and INC and HOVAL as the explanatory variables. How well do these two explanatory variables statistically explain the amount of crime at the tract level? Set the formula, then use the formula as the first argument in the lm() function. Summarize the results with the summary() method f &lt;- CRIME ~ INC + HOVAL model.ols &lt;- lm(f, data = CC.sf) model.ols |&gt; summary() ## ## Call: ## lm(formula = f, data = CC.sf) ## ## Residuals: ## Min 1Q Median 3Q Max ## -34.418 -6.388 -1.580 9.052 28.649 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 68.6190 4.7355 14.490 &lt; 2e-16 *** ## INC -1.5973 0.3341 -4.780 1.83e-05 *** ## HOVAL -0.2739 0.1032 -2.654 0.0109 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 11.43 on 46 degrees of freedom ## Multiple R-squared: 0.5524, Adjusted R-squared: 0.5329 ## F-statistic: 28.39 on 2 and 46 DF, p-value: 9.341e-09 The model explains 55% of the variation in crime as is seen by looking at the multiple R-squared value The marginal effect of income on crime is -1.6 and the marginal effect of housing value on crime is -.27 A nice way to visualize the relative significance of the explanatory variables is to make a plot. Here you use the broom::tidy() method and then ggplot() as follows. Note you don’t plot the intercept term (the first row) so you use -1 in the row dimension of the subset operation ( d &lt;- broom::tidy(model.ols, conf.int = TRUE) ) ## # A tibble: 3 × 7 ## term estimate std.error statistic p.value conf.low conf.high ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 68.6 4.74 14.5 9.21e-19 59.1 78.2 ## 2 INC -1.60 0.334 -4.78 1.83e- 5 -2.27 -0.925 ## 3 HOVAL -0.274 0.103 -2.65 1.09e- 2 -0.482 -0.0662 library(ggplot2) ggplot(d[-1,], aes(x = estimate, y = term, xmin = conf.low, xmax = conf.high, height = 0)) + geom_point(size = 2) + geom_vline(xintercept = 0, lty = 4) + geom_errorbarh() The maximum likelihood estimate is shown as a point and the confidence interval around the estimate is shown as a horizontal error bar. The default confidence level is 95% (conf.level = .95). The effects are statistically significant as the confidence intervals do not intersect the vertical line (dashed-dotted) at the value of 0 Next you check the model residuals for spatial autocorrelation. To determine the amount of autocorrelation in the residuals use the spdep::lm.morantest() function, passing the regression model object and the weights object to it. Note that here again use the default neighborhood and weighting schemes to generate the weights matrix wts wts &lt;- CC.sf |&gt; spdep::poly2nb() |&gt; spdep::nb2listw() model.ols |&gt; spdep::lm.morantest(listw = wts) ## ## Global Moran I for regression residuals ## ## data: ## model: lm(formula = f, data = CC.sf) ## weights: wts ## ## Moran I statistic standard deviate = 2.8393, p-value = 0.00226 ## alternative hypothesis: greater ## sample estimates: ## Observed Moran I Expectation Variance ## 0.222109407 -0.033418335 0.008099305 The model residuals have significant spatial autocorrelation so reporting the marginal effects with an OLS regression model is incorrect Instead, you fit a spatially-lagged Y model using the lagsarlm() function from the {spatialreg} package. The model is \\[ y = \\rho W y + X \\beta + \\varepsilon \\] where \\(Wy\\) is the weighted average of the neighborhood response values (spatial lag variable) with \\(W\\) the spatial weights matrix, and \\(\\rho\\) is the autoregression coefficient The spatialreg::lagsarlm() function first determines a value for \\(\\rho\\) ( with the internal optimize() function) and then the \\(\\beta\\)’s are obtained using generalized least squares (GLS). The model formula f is the same as what you used to fit the OLS regression above. You save the model object as model.slym model.slym &lt;- spatialreg::lagsarlm(formula = f, data = CC.sf, listw = wts) model.slym |&gt; summary() ## ## Call:spatialreg::lagsarlm(formula = f, data = CC.sf, listw = wts) ## ## Residuals: ## Min 1Q Median 3Q Max ## -37.652017 -5.334611 0.071473 6.107196 23.302618 ## ## Type: lag ## Coefficients: (asymptotic standard errors) ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 45.603249 7.257404 6.2837 3.306e-10 ## INC -1.048728 0.307406 -3.4115 0.000646 ## HOVAL -0.266335 0.089096 -2.9893 0.002796 ## ## Rho: 0.42333, LR test value: 9.4065, p-value: 0.0021621 ## Asymptotic standard error: 0.11951 ## z-value: 3.5422, p-value: 0.00039686 ## Wald statistic: 12.547, p-value: 0.00039686 ## ## Log likelihood: -182.674 for lag model ## ML residual variance (sigma squared): 96.857, (sigma: 9.8416) ## Number of observations: 49 ## Number of parameters estimated: 5 ## AIC: 375.35, (AIC for lm: 382.75) ## LM test for residual autocorrelation ## test value: 0.24703, p-value: 0.61917 The first batch of output concerns the model residuals (observed crime rates minus predicted rates). The range (maximum minus minimum) of residuals is slightly smaller than with the OLS model. Next is the table of coefficients on the explanatory variables. The coefficients on income and housing have the same sign (negative) and they remain statistically significant (-1.05 for income and -.27 for housing value). But you can’t interpret these coefficients as the marginal effects The next set of output is about the coefficient of spatial autocorrelation (\\(\\rho\\)). The value is .423 and a likelihood ratio test gives a value of 9.41 which translates to a \\(p\\)-value of .002. The null hypothesis is the autocorrelation is zero, so you confidently reject it. This is consistent with the significant Moran’s I value that you found in the residuals of the OLS model Two other statistical tests are performed on the value of \\(\\rho\\) including a z-test (t-test) using the asymptotic standard error and a Wald test. Both tests confirm (small \\(p\\)-values) that the lag term should be included in the model from crime involving income and housing values In spatial models that contain a lagged response term, the coefficients are not marginal effects. The spatial lag model allows for ‘spillover’. That is a change in an explanatory variable (\\(X_i\\)) anywhere in the study domain will affect the value of the response variable everywhere (\\(y_j\\)) \\[ \\partial y_j / \\partial X_i \\ne 0\\] which implies in this case a spillover/impact from housing values in region \\(i\\) impacts the crime in region \\(j\\) Spillover occurs even when the neighborhood weights matrix represents only local contiguity. If the non-zero cross-partial derivative implies an impact on neighboring regions that do not involve endogenous feedback, then it is called a local spillover In most applied regional modeling situations you know from substantive or theoretical aspects of the problem that a local spillover specification is appropriate. Examples: cross-border shopping for cigarettes to avoid local taxes, crossing school districts for ‘better’ schools. The key idea for local spillover is that endogenous interaction and feedbacks are not present The spillover makes interpreting the coefficients more complicated With a spatially-lagged Y model a change in the value of an explanatory variable results in both direct and indirect effects on the response variable For example, the direct effect gives the impact a change in income has on crime averaged over all tracts. It takes into account the effects from a change in the \\(i\\)th tract’s income on crime across neighboring tracts The indirect effect gives the impact a change in income has on crime averaged over all other tracts. The indirect effect represent spillovers. The influences on the dependent variable \\(y\\) in a region rendered by change in \\(X\\) in some other region. For example, if all tracts \\(i \\ne j\\) (i not equal to j) increase their income, what will be the impact on crime in region \\(j\\)? The total effect (TE) is the sum of the direct and indirect effects. It measures the total cumulative impact on crime arising from one tract \\(j\\) increasing its income over all other tracts (on average). It is given by \\[ \\hbox{TE} = \\left(\\frac{\\beta_k}{1-\\rho^2}\\right)\\left(1 + \\rho\\right) \\] where \\(\\beta_k\\) is the effect of variable \\(k\\) and \\(\\rho\\) is the spatial autocorrelation coefficient. With \\(\\rho = 0\\) TE is \\(\\beta_k\\) Here \\(\\beta_{INC}\\) is -1.0487 and \\(\\rho\\) is .4233, so the total effect is ( TE_INC &lt;- -1.0487 / (1 - .4233^2) * (1 + .4233) ) ## [1] -1.81845 The direct, indirect, and total effects are shown using the spatialreg::impacts() function model.slym |&gt; spatialreg::impacts(listw = wts) ## Impact measures (lag, exact): ## Direct Indirect Total ## INC -1.1008955 -0.7176833 -1.8185788 ## HOVAL -0.2795832 -0.1822627 -0.4618459 The direct effects are the changes in the response variable of a particular region arising from a one unit increase in an explanatory variable in that region The indirect effects are the changes in the response variable of a particular region arising from a one unit increase in an explanatory variable in another region. For example, due to spatial autocorrelation, a one-unit change in the income variable in region 1 affects the crime rate in regions 2 and 3 The next set of output concerns the overall model fit. It includes the log likelihood value and the AIC (Akaike Information Criterion). The AIC value for the linear model is included. Here it is clear that the spatial lag model is an improvement (smaller AIC) over the aspatial model The larger the likelihood, the better the model and two times the difference in log likelihoods from two competing models divided by the number of observations gives a scale for how much improvement x &lt;- 2 * (logLik(model.slym) - logLik(model.ols))/49 x[1] ## [1] 0.1919701 Improvement table Likelihood difference Qualitative improvement 1 huge .1 large .01 good .001 okay The final bit of output is a Lagrange multiplier test for remaining autocorrelation. The null hypothesis is there is no remaining autocorrelation since we have a lag term in the model. The result is a high \\(p\\)-value so you are satisfied that the lag term takes care of the autocorrelation Compare the spatial lag model to a spatial error model. Here you use the spatialreg::errorsarlm() function model.sem &lt;- spatialreg::errorsarlm(formula = f, data = CC.sf, listw = wts) summary(model.sem) ## ## Call:spatialreg::errorsarlm(formula = f, data = CC.sf, listw = wts) ## ## Residuals: ## Min 1Q Median 3Q Max ## -34.65998 -6.16943 -0.70623 7.75392 23.43878 ## ## Type: error ## Coefficients: (asymptotic standard errors) ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 60.279469 5.365594 11.2344 &lt; 2.2e-16 ## INC -0.957305 0.334231 -2.8642 0.0041806 ## HOVAL -0.304559 0.092047 -3.3087 0.0009372 ## ## Lambda: 0.54675, LR test value: 7.2556, p-value: 0.0070679 ## Asymptotic standard error: 0.13805 ## z-value: 3.9605, p-value: 7.4786e-05 ## Wald statistic: 15.686, p-value: 7.4786e-05 ## ## Log likelihood: -183.7494 for error model ## ML residual variance (sigma squared): 97.674, (sigma: 9.883) ## Number of observations: 49 ## Number of parameters estimated: 5 ## AIC: 377.5, (AIC for lm: 382.75) You find the coefficient of spatial autocorrelation (\\(\\lambda\\)) is significant, but the log likelihood value from the model is smaller (-183.7) and the AIC value is larger (377.5) compared with corresponding values from the lag model. This is consistent with the Lagrange multiplier (LM) tests indicating the spatial lag model is more appropriate Also you can compare the log likelihoods from the two spatial regression models that you fit x &lt;- 2 * (logLik(model.slym) - logLik(model.sem))/49 x[1] ## [1] 0.04389617 With a value of .04 you conclude that there is good improvement of the lag model over the error model. Again, this is consistent with your decision above to use the lag model With the spatial error model the coefficients can be interpreted as marginal effects like with the OLS model If there are large differences (e.g., different signs) between the coefficient estimate from SEM and OLS, this suggests that neither model is yielding parameters estimates matching the underlying parameters of the data generating process You test whether there is a significant difference in coefficient estimates with the Hausman test under the hypothesis of no difference spatialreg::Hausman.test(model.sem) ## ## Spatial Hausman test (asymptotic) ## ## data: NULL ## Hausman test = 5.6132, df = 3, p-value = 0.132 The \\(p\\)-value gives inconclusive evidence that the coefficients are different and that maybe the SEM is not the right way to proceed with these data The predict() method implements the predict.sarlm() function to calculate predictions from the spatial regression model. The prediction on a spatial lag Y model is decomposed into a “trend” term (explanatory variable effect) and a “signal” term (spatial smoother). The predicted fit is the sum of the trend and the signal terms when using the spatial lag model You make predictions with the predict() method under the assumption that the mean response is known. You examine the structure of the corresponding predict object ( predictedValues &lt;- predict(model.slym) ) ## This method assumes the response is known - see manual page ## fit trend signal ## 1 14.151553 3.689375 10.462178 ## 2 22.577864 11.466909 11.110955 ## 3 34.302562 21.851820 12.450742 ## 4 46.732511 32.065777 14.666734 ## 5 44.747335 27.617334 17.130002 ## 6 38.333111 21.136061 17.197050 ## 7 37.830286 16.778970 21.051316 ## 8 41.393775 23.826138 17.567637 ## 9 28.792040 13.151105 15.640935 ## 10 16.390116 5.667967 10.722149 ## 11 53.631524 32.525600 21.105925 ## 12 48.074429 29.765566 18.308863 ## 13 40.608933 24.482782 16.126151 ## 14 41.856029 23.729006 18.127022 ## 15 51.665885 30.455129 21.210756 ## 16 54.767238 32.599603 22.167635 ## 17 31.866731 24.208332 7.658399 ## 18 37.461970 15.795680 21.666290 ## 19 44.929428 25.269280 19.660148 ## 20 5.110404 -8.624965 13.735370 ## 21 47.617356 29.109013 18.508344 ## 22 40.412907 25.213796 15.199111 ## 23 18.640125 10.704444 7.935681 ## 24 39.747461 16.504543 23.242918 ## 25 53.116667 31.962567 21.154100 ## 26 52.303708 31.717685 20.586023 ## 27 39.228077 25.171896 14.056181 ## 28 51.354572 31.278690 20.075882 ## 29 49.767662 27.843359 21.924303 ## 30 45.589426 25.027102 20.562325 ## 31 27.465213 19.368346 8.096867 ## 32 20.869990 15.004949 5.865041 ## 33 44.697299 28.916462 15.780838 ## 34 31.720867 22.349635 9.371232 ## 35 38.985264 24.973806 14.011458 ## 36 24.222607 16.283179 7.939428 ## 37 37.811894 16.224745 21.587149 ## 38 46.388525 27.909225 18.479300 ## 39 22.524680 15.679042 6.845638 ## 40 6.730001 -2.182900 8.912901 ## 41 20.020878 11.101447 8.919432 ## 42 14.764446 6.662085 8.102360 ## 43 40.034408 24.726461 15.307947 ## 44 34.026283 18.893554 15.132729 ## 45 36.970894 23.393213 13.577681 ## 46 13.189170 6.118277 7.070893 ## 47 21.849812 14.410620 7.439192 ## 48 38.162352 26.076851 12.085502 ## 49 27.876102 16.356569 11.519534 The predicted values are in the column labeled fit. The predicted values are a sum of the trend term (\\(X\\beta\\)) and the signal term (\\(\\rho W y\\)). The signal term is called the spatial smoother As a first-order check if things are what you think they are, compare the first five predicted values with the corresponding observed values predictedValues[1:5] ## 1 2 3 4 5 ## 14.15155 22.57786 34.30256 46.73251 44.74734 CC.sf$CRIME[1:5] ## [1] 15.72598 18.80175 30.62678 32.38776 50.73151 Some predicted values are lower than the corresponding observed values and some are higher The predicted values along with the values for the trend and signal are added to the simple features data frame CC.sf$fit &lt;- as.numeric(predictedValues) CC.sf$trend &lt;- attr(predictedValues, &quot;trend&quot;) CC.sf$signal &lt;- attr(predictedValues, &quot;signal&quot;) You plot the observed versus the predicted as a scatter plot with a y = x line and a best-fit regression line ggplot(data = CC.sf, mapping = aes(x = CRIME, y = fit)) + geom_point() + geom_smooth(method = lm, se = FALSE, color = &quot;red&quot;) + geom_abline() + scale_x_continuous(limits = c(0, 70)) + scale_y_continuous(limits = c(0, 70)) + xlab(&quot;Observed Crime&quot;) + ylab(&quot;Predicted Crime&quot;) ## `geom_smooth()` using formula = &#39;y ~ x&#39; The components of the predictions are mapped and placed on the same plot ( g1 &lt;- ggplot() + geom_sf(data = CC.sf, aes(fill = fit)) + scale_fill_viridis_c() + ggtitle(&quot;Predicted Crime&quot;) ) ( g2 &lt;- ggplot() + geom_sf(data = CC.sf, aes(fill = trend)) + scale_fill_viridis_c() + ggtitle(&quot;Trend (Explanatory Variables)&quot;) ) ( g3 &lt;- ggplot() + geom_sf(data = CC.sf, aes(fill = signal)) + scale_fill_viridis_c() + ggtitle(&quot;Signal&quot;) ) library(patchwork) g1 + g2 + g3 The trend term and the spatial smoother have similar ranges indicating nearly equal contributions to the predictions. The largest difference between the two terms occurs in the city’s east side A map of the difference makes this clear CC.sf &lt;- CC.sf |&gt; dplyr::mutate(CovMinusSmooth = trend - signal) tmap::tm_shape(CC.sf) + tmap::tm_fill(col = &quot;CovMinusSmooth&quot;) ## Warning: Currect projection of shape CC.sf unknown. Long-lat (WGS84) is ## assumed. ## Variable(s) &quot;CovMinusSmooth&quot; contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette. How many tracts have a smaller residual with the lag model versus the OLS model? CC.sf |&gt; dplyr::mutate(residualsL = CRIME - fit, lagWins = abs(residuals(model.ols)) &gt; abs(residualsL), CovMinusSmooth = trend - signal) |&gt; sf::st_drop_geometry() |&gt; dplyr::summarize(N = sum(lagWins)) ## N ## 1 32 In 32 out of the 49 tracts the residuals from the spatial model are smaller than the residuals from the OLS model Another spatial regression option is to modify the linear model to include spatially-lagged explanatory variables. This is called the spatially-lagged X model \\[ y = X \\beta + XW \\theta + \\varepsilon \\] In this case the weights matrix is (post) multiplied by the matrix of X variables where \\(W\\) is again the weights matrix and \\(\\theta\\) is a vector of coefficients for each lagged explanatory variable Here you fit the spatially-lagged X model using the spatialreg::lmSLX() function and save the model object as model.slxm ( model.slxm &lt;- spatialreg::lmSLX(formula = f, data = CC.sf, listw = wts) ) ## ## Call: ## lm(formula = formula(paste(&quot;y ~ &quot;, paste(colnames(x)[-1], collapse = &quot;+&quot;))), ## data = as.data.frame(x), weights = weights) ## ## Coefficients: ## (Intercept) INC HOVAL lag.INC lag.HOVAL ## 74.5534 -1.0974 -0.2944 -1.3987 0.2148 With this model, beside the direct marginal effects of income and housing value on crime, you also have the spatially-lagged indirect effects The total effect of income on crime is the sum of the direct effect and indirect effect. And again, using the spatialreg::impacts() function you see this model.slxm |&gt; spatialreg::impacts(listw = wts) ## Impact measures (SlX, estimable): ## Direct Indirect Total ## INC -1.0973898 -1.398746 -2.49613551 ## HOVAL -0.2943898 0.214841 -0.07954881 You get the impact measures and their standard errors, z-values and \\(p\\)-values with the summary() method applied to the output of the impacts() function summary(spatialreg::impacts(model.slxm, listw = wts)) ## Impact measures (SlX, estimable, n-k): ## Direct Indirect Total ## INC -1.0973898 -1.398746 -2.49613551 ## HOVAL -0.2943898 0.214841 -0.07954881 ## ======================================================== ## Standard errors: ## Direct Indirect Total ## INC 0.3738313 0.5601247 0.4929713 ## HOVAL 0.1016586 0.2079212 0.2074767 ## ======================================================== ## Z-values: ## Direct Indirect Total ## INC -2.935522 -2.497204 -5.0634496 ## HOVAL -2.895867 1.033281 -0.3834108 ## ## p-values: ## Direct Indirect Total ## INC 0.0033299 0.012518 4.1174e-07 ## HOVAL 0.0037811 0.301473 0.70142 Results show that income has a significant direct and indirect effect on crime rates, but housing values only show a significant direct effect and not a significant indirect effect Again you visualize the relative significance of the effects model.slxm |&gt; broom::tidy(conf.int = TRUE) |&gt; dplyr::slice(-1) |&gt; ggplot(aes(x = estimate, y = term, xmin = conf.low, xmax = conf.high, height = 0)) + geom_point(size = 2) + geom_vline(xintercept = 0, lty = 4) + geom_errorbarh() ## Warning: The `tidy()` method for objects of class `SlX` is not maintained by the broom team, and is only supported through the `lm` tidier method. Please be cautious in interpreting and reporting broom output. ## ## This warning is displayed once per session. Compare R squared values between the OLS model and the spatially-lagged X model summary(model.ols)$r.squared ## [1] 0.552404 summary(model.slxm)$r.squared ## [1] 0.6105076 The spatially lagged model has an R squared value that is higher than the R squared value from the linear regression Another way to find the correct spatial model is to consider both the spatial Durbin error model and the spatial Durbin model The spatial Durban error model (SDEM) is a spatial error model with a spatially-lagged X term added To fit a SDEM use the spatialreg::errorsarlm() function but include the argument etype = \"emixed\" to ensure that the spatially lagged X variables are added and the lagged intercept term is dropped when the weights style is row standardized (\"W\") ( model.sdem &lt;- spatialreg::errorsarlm(formula = f, data = CC.sf, listw = wts, etype = &quot;emixed&quot;) ) ## ## Call: ## spatialreg::errorsarlm(formula = f, data = CC.sf, listw = wts, ## etype = &quot;emixed&quot;) ## Type: error ## ## Coefficients: ## lambda (Intercept) INC HOVAL lag.INC lag.HOVAL ## 0.4035821 73.6450826 -1.0522585 -0.2781741 -1.2048761 0.1312451 ## ## Log likelihood: -181.779 The spatial Durban model (SDM) is a spatially-lagged Y model with a spatially-lagged X term added to it To fit a SDM use the lagsarlm() function but include the argument type = \"mixed\" to ensure that the spatially lagged X variables are added and the lagged intercept term is dropped when the weights style is row standardized (\"W\") ( model.sdm &lt;- spatialreg::lagsarlm(formula = f, data = CC.sf, listw = wts, type = &quot;mixed&quot;) ) ## ## Call: ## spatialreg::lagsarlm(formula = f, data = CC.sf, listw = wts, ## type = &quot;mixed&quot;) ## Type: mixed ## ## Coefficients: ## rho (Intercept) INC HOVAL lag.INC lag.HOVAL ## 0.4034626 44.3200052 -0.9199061 -0.2971294 -0.5839133 0.2576843 ## ## Log likelihood: -181.6393 How to do you choose between these two models? Is the relationship between crime and income and housing values a global or local effect? Is there any reason to think that if something happens in one tract it will spillover across the entire city? If crime happens in one tract does it influence crime across the entire city? If so, then it is a global relationship. Or might it be a more local effect? If there is more crime in one tract then maybe that influences crime in the neighboring tract but not tracts farther away. If so, then it is a local relationship If you think it is a local relationship, start with the spatial Durbin error model and look at the \\(p\\)-values on the direct and indirect effects summary(spatialreg::impacts(model.sdem, listw = wts, R = 500), zstats = TRUE) ## Impact measures (SDEM, estimable, n): ## Direct Indirect Total ## INC -1.0522585 -1.2048761 -2.257135 ## HOVAL -0.2781741 0.1312451 -0.146929 ## ======================================================== ## Standard errors: ## Direct Indirect Total ## INC 0.32127932 0.5736416 0.6326029 ## HOVAL 0.09114185 0.2072449 0.2372854 ## ======================================================== ## Z-values: ## Direct Indirect Total ## INC -3.275214 -2.100399 -3.568012 ## HOVAL -3.052101 0.633285 -0.619208 ## ## p-values: ## Direct Indirect Total ## INC 0.0010558 0.035694 0.0003597 ## HOVAL 0.0022725 0.526548 0.5357794 You see that income has a statistically significant direct and indirect effect on crime. This means that tracts with higher income have lower crime and tracts whose neighboring tracts have higher income also have lower crime On the other hand, housing values have only a statistically significant direct effect on crime. Tracts with more expensive houses have lower crime but tracts whose neighboring tracts have more expensive houses do not imply lower crime. And the total effect of housing values on crime across the city is not significant. So if housing values go up in tracts citywide, there is no statistical evidence that crime will go down (or up) Try a likelihood ratio test with the null hypothesis being that you should restrict the model spatialreg::LR.Sarlm(model.sdem, model.slxm) ## ## Likelihood ratio for spatial linear models ## ## data: ## Likelihood ratio = 4.3832, df = 1, p-value = 0.03629 ## sample estimates: ## Log likelihood of model.sdem Log likelihood of model.slxm ## -181.7790 -183.9706 The relatively small \\(p\\)-value suggests you shouldn’t restrict the spatial Durbin model to just the spatially-lagged X model although the evidence is not overwhelming More information: https://youtu.be/b3HtV2Mhmvk Video explaining the types of spatial regression models and how to implement them in R https://rrs.scholasticahq.com/article/8081-what-regional-scientists-need-to-know-about-spatial-econometrics What Regional Scientists Need to Know About Spatial Econometrics "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
